{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/styles/feedbackOptions.module.scss"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","onClick","className","style","option__button","Section","title","children","Notification","message","App","useState","setGood","setNeutral","setBad","objState","Object","keys","countTotalFeedback","values","reduce","accum","value","prevGood","prevNeutral","prevBad","toFixed","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kNAoBeA,EAjBG,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAKC,EAAP,EAAOA,QAAQC,EAAf,EAAeA,IAAIC,EAAnB,EAAmBA,MAAMC,EAAzB,EAAyBA,mBAAzB,OAClB,gCACI,sCAASJ,KACT,yCAAYC,KACZ,qCAAQC,KACR,uCAAUC,KACV,oDAAuBC,S,gBCKZC,EAVQ,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAQC,EAAV,EAAUA,gBAAV,OACnBD,EAAQE,KAAI,SAAAC,GAAM,OACV,wBAAqBC,QAAS,kBAAMH,EAAgBE,IAASE,UAAWC,IAAMC,eAA9E,SAA+FJ,GAAlFA,OCUVK,EAZA,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAMC,EAAR,EAAQA,SAAR,OACX,oCACI,6BAAKD,IACJC,MCIMC,EARM,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OACrB,4BAAIA,KCEW,SAASC,IAEpB,MAAqBC,mBAAS,GAA9B,mBAAOpB,EAAP,KAAYqB,EAAZ,KACA,EAA2BD,mBAAS,GAApC,mBAAOnB,EAAP,KAAeqB,EAAf,KACA,EAAmBF,mBAAS,GAA5B,mBAAOlB,EAAP,KAAWqB,EAAX,KAEMC,EAAS,CAACxB,OAAKC,UAAQC,OACvBI,EAAQmB,OAAOC,KAAKF,GAkBrBG,EAAqB,WAEtB,OADiBF,OAAOG,OAAOJ,GACbK,QAAO,SAACC,EAAMC,GAAP,OAAiBD,EAAQC,IAAM,IASxD,OACI,qCACI,cAAC,EAAD,CAAShB,MAAO,wBAAhB,SACI,cAAC,EAAD,CAAiBT,QAASA,EAASC,gBA9BhC,SAACwB,GACjB,OAAQA,GACJ,IAAK,OAED,YADAV,GAAQ,SAAAW,GAAQ,OAAIA,EAAW,KAEnC,IAAK,UAED,YADAV,GAAW,SAAAW,GAAW,OAAIA,EAAc,KAE5C,IAAK,MAED,YADAV,GAAO,SAAAW,GAAO,OAAIA,EAAU,KAEhC,QAAQ,aAqBH,cAAC,EAAD,CAASnB,MAAO,cAAhB,SACXf,GAAQC,GAAWC,EAAM,EACtB,cAAC,EAAD,CAAYF,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOwB,IAC/CvB,mBAZLJ,EAAO,GAAMA,EAAO2B,IAAwB,KAAKQ,UAAY,IAAM,IAYH,cAAC,EAAD,CAAcjB,QAAS,2BC7CtGkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnB,EAAD,MAEFoB,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,eAAiB,2C","file":"static/js/main.2fb39377.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst Statistics =({good,neutral,bad,total,positivePercentage}) => (\n<div>\n    <p>Good:{good}</p>\n    <p>Neutral:{neutral}</p>\n    <p>Bad:{bad}</p>\n    <p>Total:{total}</p>\n    <p>Positive feedback: {positivePercentage}</p>\n</div>\n)\n\nStatistics.propTypes={\n    good:PropTypes.number.isRequired,\n    neutral:PropTypes.number.isRequired,\n    bad:PropTypes.number.isRequired,\n    total:PropTypes.number.isRequired,\n    positivePercentage:PropTypes.node.isRequired,\n}\nexport default Statistics;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport style from './styles/feedbackOptions.module.scss'\n\nconst FeedbackOptions =({options,onLeaveFeedback}) => (\n    options.map(option => (\n            <button key={option} onClick={() => onLeaveFeedback(option)} className={style.option__button}>{option}</button>\n    ))\n)\n\nFeedbackOptions.propTypes= {\n    options:PropTypes.node.isRequired\n}\n\nexport default FeedbackOptions;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\n\nconst Section =({title,children}) => (\n    <section>\n        <h2>{title}</h2>\n        {children}\n    </section>\n)\n\nSection.propTypes = {\n    title:PropTypes.string.isRequired,\n\n}\n\nexport default Section;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst Notification = ({message}) => (\n<p>{message}</p>\n)\n\nNotification.propTypes={\n    message:PropTypes.string\n}\n\nexport default Notification;","import React,{useState} from \"react\";\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification\";\n\nexport default function App() {\n\n    const [good,setGood]=useState(0);\n    const [neutral,setNeutral]=useState(0);\n    const [bad,setBad]=useState(0);\n\n    const objState={good,neutral,bad};\n    const options=Object.keys(objState);\n\n   const updateState = (value) => {\n       switch (value) {\n           case 'good' :\n               setGood(prevGood => prevGood + 1);\n               return;\n           case 'neutral' :\n               setNeutral(prevNeutral => prevNeutral + 1);\n               return;\n           case 'bad' :\n               setBad(prevBad => prevBad + 1);\n               return;\n           default:return;\n       }\n\n    }\n\n   const countTotalFeedback = () => {\n        const valueState=Object.values(objState);\n        return valueState.reduce((accum,value) => accum + value,0);\n\n    }\n\n   const  countPositiveFeedbackPercentage = () => {\n        return good > 0 ? ((good / countTotalFeedback()) * 100).toFixed() + '%' : 0;\n    }\n\n\n        return (\n            <>\n                <Section title={'Please leave feedback'}>\n                    <FeedbackOptions options={options} onLeaveFeedback={updateState}/>\n                </Section>\n                <Section title={'Statistical'}>\n    {good || neutral || bad > 0 ?\n        <Statistics good={good} neutral={neutral} bad={bad} total={countTotalFeedback()}\n                    positivePercentage={countPositiveFeedbackPercentage()}/> : <Notification message={'No feedback given'}/>}\n                </Section>\n\n            </>\n        )\n    }\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option__button\":\"feedbackOptions_option__button__2HAoF\"};"],"sourceRoot":""}